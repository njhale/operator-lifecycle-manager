apiVersion: v1
kind: Namespace
metadata:
  annotations:
    openshift.io/node-selector: ""
  labels:
    openshift.io/cluster-monitoring: "true"
    openshift.io/run-level: "1"
  name: openshift-operator-lifecycle-manager
---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    openshift.io/node-selector: ""
  labels:
    openshift.io/run-level: "1"
  name: openshift-operators
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    description: Operator represents an operator installation.
    displayName: Operator
  name: operators.operators.coreos.com
spec:
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: Operator
    listKind: OperatorList
    plural: operators
    shortNames:
    - op
    singular: operator
  scope: Cluster
  versions:
  - name: v2alpha1
    schema:
      openAPIV3Schema:
        properties:
          status:
            properties:
              components:
                description: components tracks the resources that compose an operator.
                properties:
                  labelSelector:
                    description: labelSelector is a label query over a set of resources
                      used to select the operator's components
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                              x-kubernetes-patch-merge-key: key
                              x-kubernetes-patch-strategy: merge
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is key,
                          the operator is In, and the values array contains only value.
                          The requirements are ANDed.
                        type: object
                    type: object
                  refs:
                    description: Refs are a set of references to the operator's component
                      resources, selected with LabelSelector.
                    items:
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    type: array
                required:
                - labelSelector
                type: object
            required:
            - components
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    description: A source configured to find packages and updates.
    displayName: CatalogSource
  name: catalogsources.operators.coreos.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.displayName
    description: The pretty name of the catalog
    name: Display
    type: string
  - JSONPath: .spec.sourceType
    description: The type of the catalog
    name: Type
    type: string
  - JSONPath: .spec.publisher
    description: The publisher of the catalog
    name: Publisher
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: CatalogSource
    listKind: CatalogSourceList
    plural: catalogsources
    shortNames:
    - catsrc
    singular: catalogsource
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A source configured to find packages and updates.
      properties:
        spec:
          description: Spec for a catalog source.
          properties:
            address:
              description: An optional address. When set, directs OLM to connect to
                use a pre-existing registry server at this address.
              type: string
            configMap:
              description: The name of a ConfigMap that holds the entries for an in-memory
                catalog.
              type: string
            displayName:
              description: Pretty name for display
              type: string
            image:
              description: An image that serves a grpc registry. Only valid for `grpc`
                sourceType. If both image and address are set, OLM does not use the
                address field.
              type: string
            publisher:
              description: The name of an entity that publishes this catalog
              type: string
            secrets:
              description: A set of secrets that can be used to access the contents
                of the catalog. It is best to keep this list small, since each will
                need to be tried for every catalog entry.
              items:
                description: A name of a secret in the namespace where the CatalogSource
                  is defined.
                type: string
              type: array
            sourceType:
              description: The type of the source. `configmap` is the new name for
                `internal`
              enum:
              - internal
              - configmap
              - grpc
              type: string
          required:
          - sourceType
          type: object
        status:
          description: The status of the CatalogSource
          properties:
            configMapReference:
              description: If sourceType is `internal` or `configmap`, then this holds
                a reference to the configmap associated with this CatalogSource.
              properties:
                name:
                  description: name of the configmap
                  type: string
                namespace:
                  description: namespace of the configmap
                  type: string
                resourceVersion:
                  description: resourceVersion of the configmap
                  type: string
                uid:
                  description: uid of the configmap
                  type: string
              type: object
            lastSync:
              description: the last time the catalog was updated. If this time is
                less than the last updated time on the object, the catalog will be
                re-cached.
              type: string
            registryService:
              properties:
                port:
                  description: port of the registry service
                  type: string
                protocol:
                  description: protocol of the registry service
                  enum:
                  - grpc
                  type: string
                serviceName:
                  description: name of the registry service
                  type: string
                serviceNamespace:
                  description: namespace of the registry service
                  type: string
              type: object
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    description: Represents an Operator that should be running on the cluster, including
      requirements and install strategy.
    displayName: Operator Version
  name: clusterserviceversions.operators.coreos.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.displayName
    description: The name of the CSV
    name: Display
    type: string
  - JSONPath: .spec.version
    description: The version of the CSV
    name: Version
    type: string
  - JSONPath: .spec.replaces
    description: The name of a CSV that this one replaces
    name: Replaces
    type: string
  - JSONPath: .status.phase
    name: Phase
    type: string
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: ClusterServiceVersion
    listKind: ClusterServiceVersionList
    plural: clusterserviceversions
    shortNames:
    - csv
    - csvs
    singular: clusterserviceversion
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Represents an Operator that should be running on the cluster, including
        requirements and install strategy.
      properties:
        spec:
          description: Spec for a ClusterServiceVersion
          properties:
            apiservicedefinitions:
              properties:
                owned:
                  description: What resources this operator is responsible for managing.
                    No two running operators should manage the same resource.
                  items:
                    properties:
                      actionDescriptors:
                        items:
                          description: A spec for actions that can be performed on
                            instances of the API resource
                          properties:
                            description:
                              description: A description of the action.
                              type: string
                            displayName:
                              description: A human-readable name for the action.
                              type: string
                            path:
                              description: A jsonpath indexing into the spec object
                                on the API resource where the the spec value can be
                                found.
                              type: string
                            value:
                              description: If present, the value of this action is
                                the same for all instances of the API resource and
                                can be found here instead of on the API resource.
                            x-descriptors:
                              description: A list of descriptors for the action that
                                indicate the meaning of the action.
                              items:
                                type: string
                              type: array
                          required:
                          - path
                          - displayName
                          - description
                          type: object
                        type: array
                      containerPort:
                        description: Port where the extension api-server serves TLS
                          traffic
                        type: number
                      deploymentName:
                        description: Name of the extension api-server's deployment
                        type: string
                      description:
                        description: A description of the APIService
                        type: string
                      displayName:
                        description: A human-readable name for the APIService.
                        type: string
                      group:
                        description: Group of the APIService (e.g. app.coreos.com)
                        type: string
                      kind:
                        description: The kind field of the APIService
                        type: string
                      name:
                        description: The plural name for the APIService provided
                        type: string
                      resources:
                        items:
                          description: A list of resources that should be displayed
                            for the APIService
                          properties:
                            kind:
                              description: The kind field of the resource kind
                              type: string
                            name:
                              description: If a APIService, the fully qualified name
                                of the APIService (e.g. my-resource-v1.app.coreos.com)
                              type: string
                            version:
                              description: The version of the resource kind
                              type: string
                          required:
                          - kind
                          - version
                          type: object
                        type: array
                      specDescriptors:
                        items:
                          description: A spec for a field in the spec block of the
                            APIService resource.
                          properties:
                            description:
                              description: A description of the spec entry.
                              type: string
                            displayName:
                              description: A human-readable name for the spec entry.
                              type: string
                            path:
                              description: A jsonpath indexing into the spec object
                                on the API resource where the the spec value can be
                                found.
                              type: string
                            value:
                              description: If present, the value of this spec is the
                                same for all instances of the API Resource and can
                                be found here instead of on the API resource.
                            x-descriptors:
                              description: A list of descriptors for the spec entry
                                that indicate the meaning of the field.
                              items:
                                type: string
                              type: array
                          required:
                          - path
                          - displayName
                          - description
                          type: object
                        type: array
                      statusDescriptors:
                        items:
                          description: A spec for a field in the status block of the
                            API resource
                          properties:
                            description:
                              description: A description of the status entry.
                              type: string
                            displayName:
                              description: A human-readable name for the status entry.
                              type: string
                            path:
                              description: A jsonpath indexing into the status object
                                on the API resource where the the status value can
                                be found.
                              type: string
                            value:
                              description: If present, the value of this status is
                                the same for all instances of the API resource and
                                can be found here instead of on the API resource.
                            x-descriptors:
                              description: A list of descriptors for the status entry
                                that indicate the meaning of the field.
                              items:
                                type: string
                              type: array
                          required:
                          - path
                          - displayName
                          - description
                          type: object
                        type: array
                      version:
                        description: The version field of the APIService
                        type: string
                    required:
                    - group
                    - version
                    - kind
                    - name
                    - deploymentName
                    - displayName
                    - description
                    type: object
                  type: array
                required:
                  description: What resources this operator is responsible for managing.
                    No two running operators should manage the same resource.
                  items:
                    properties:
                      containerPort:
                        description: Port where the extension api-server serves TLS
                          traffic
                        type: number
                      deploymentName:
                        description: Name of the extension api-server's deployment
                        type: string
                      description:
                        description: A description of the APIService
                        type: string
                      displayName:
                        description: A human-readable name for the APIService.
                        type: string
                      group:
                        description: Group of the APIService (e.g. app.coreos.com)
                        type: string
                      kind:
                        description: The kind field of the APIService
                        type: string
                      name:
                        description: The plural name for the APIService provided
                        type: string
                      statusDescriptors:
                        items:
                          description: A spec for a field in the status block of the
                            APIService
                          properties:
                            description:
                              description: A description of the status entry.
                              type: string
                            displayName:
                              description: A human-readable name for the status entry.
                              type: string
                            path:
                              description: A jsonpath indexing into the status object
                                on the API Resource where the the status value can
                                be found.
                              type: string
                            value:
                              description: If present, the value of this status is
                                the same for all instances of the API Resource and
                                can be found here instead of on the API Resource.
                            x-descriptors:
                              description: A list of descriptors for the status entry
                                that indicate the meaning of the field.
                              items:
                                type: string
                              type: array
                          required:
                          - path
                          - displayName
                          - description
                          type: object
                        type: array
                      version:
                        description: The version field of the APIService
                        type: string
                    required:
                    - group
                    - version
                    - kind
                    - name
                    - displayName
                    - description
                    type: object
                  type: array
              type: object
            customresourcedefinitions:
              properties:
                owned:
                  description: What resources this operator is responsible for managing.
                    No two running operators should manage the same resource.
                  items:
                    properties:
                      actionDescriptors:
                        items:
                          description: A spec for actions that can be performed on
                            instances of the CRD
                          properties:
                            description:
                              description: A description of the action.
                              type: string
                            displayName:
                              description: A human-readable name for the action.
                              type: string
                            path:
                              description: A jsonpath indexing into the spec object
                                on the CR where the the spec value can be found.
                              type: string
                            value:
                              description: If present, the value of this action is
                                the same for all instances of the CRD and can be found
                                here instead of on the CR.
                            x-descriptors:
                              description: A list of descriptors for the action that
                                indicate the meaning of the action.
                              items:
                                type: string
                              type: array
                          required:
                          - path
                          - displayName
                          - description
                          type: object
                        type: array
                      description:
                        description: A description of the CRD
                        type: string
                      displayName:
                        description: A human-readable name for the CRD.
                        type: string
                      kind:
                        description: The kind field of the CustomResourceDefinition
                        type: string
                      name:
                        description: Fully qualified name of the CustomResourceDefinition
                          (e.g. my-resource-v1.app.coreos.com)
                        type: string
                      resources:
                        items:
                          description: A list of resources that should be displayed
                            for the CRD
                          properties:
                            kind:
                              description: The kind field of the resource kind
                              type: string
                            name:
                              description: If a CRD, the fully qualified name of the
                                CustomResourceDefinition (e.g. my-resource-v1.app.coreos.com)
                              type: string
                            version:
                              description: The version of the resource kind
                              type: string
                          required:
                          - kind
                          - version
                          type: object
                        type: array
                      specDescriptors:
                        items:
                          description: A spec for a field in the spec block of the
                            CRD
                          properties:
                            description:
                              description: A description of the spec entry.
                              type: string
                            displayName:
                              description: A human-readable name for the spec entry.
                              type: string
                            path:
                              description: A jsonpath indexing into the spec object
                                on the CR where the the spec value can be found.
                              type: string
                            value:
                              description: If present, the value of this spec is the
                                same for all instances of the CRD and can be found
                                here instead of on the CR.
                            x-descriptors:
                              description: A list of descriptors for the spec entry
                                that indicate the meaning of the field.
                              items:
                                type: string
                              type: array
                          required:
                          - path
                          - displayName
                          - description
                          type: object
                        type: array
                      statusDescriptors:
                        items:
                          description: A spec for a field in the status block of the
                            CRD
                          properties:
                            description:
                              description: A description of the status entry.
                              type: string
                            displayName:
                              description: A human-readable name for the status entry.
                              type: string
                            path:
                              description: A jsonpath indexing into the status object
                                on the CR where the the status value can be found.
                              type: string
                            value:
                              description: If present, the value of this status is
                                the same for all instances of the CRD and can be found
                                here instead of on the CR.
                            x-descriptors:
                              description: A list of descriptors for the status entry
                                that indicate the meaning of the field.
                              items:
                                type: string
                              type: array
                          required:
                          - path
                          - displayName
                          - description
                          type: object
                        type: array
                      version:
                        description: The version field of the CustomResourceDefinition
                        type: string
                    required:
                    - name
                    - version
                    - kind
                    - displayName
                    - description
                    type: object
                  type: array
                required:
                  description: What resources this operator is responsible for managing.
                    No two running operators should manage the same resource.
                  items:
                    properties:
                      description:
                        description: A description of the CRD
                        type: string
                      displayName:
                        description: A human-readable name for the CRD.
                        type: string
                      kind:
                        description: The kind field of the CustomResourceDefinition
                        type: string
                      name:
                        description: Fully qualified name of the CustomResourceDefinition
                          (e.g. my-resource-v1.app.coreos.com)
                        type: string
                      statusDescriptors:
                        items:
                          description: A spec for a field in the status block of the
                            CRD
                          properties:
                            description:
                              description: A description of the status entry.
                              type: string
                            displayName:
                              description: A human-readable name for the status entry.
                              type: string
                            path:
                              description: A jsonpath indexing into the status object
                                on the CR where the the status value can be found.
                              type: string
                            value:
                              description: If present, the value of this status is
                                the same for all instances of the CRD and can be found
                                here instead of on the CR.
                            x-descriptors:
                              description: A list of descriptors for the status entry
                                that indicate the meaning of the field.
                              items:
                                type: string
                              type: array
                          required:
                          - path
                          - displayName
                          - description
                          type: object
                        type: array
                      version:
                        description: The version field of the CustomResourceDefinition
                        type: string
                    required:
                    - name
                    - version
                    - kind
                    - displayName
                    - description
                    type: object
                  type: array
              type: object
            description:
              description: Human readable description of what the application does
              type: string
            displayName:
              description: Human readable name of the application that will be displayed
                in the ALM UI
              type: string
            icon:
              description: Icon which should be rendered with the application information
              items:
                properties:
                  base64data:
                    description: Base64 binary representation of the icon image
                    type: string
                  mediatype:
                    description: Mediatype for the binary data specified in the base64data
                      property
                    enum:
                    - image/gif
                    - image/jpeg
                    - image/png
                    - image/svg+xml
                    type: string
                required:
                - base64data
                - mediatype
                type: object
              type: array
            install:
              description: Information required to install this specific version of
                the operator software
              oneOf:
              - properties:
                  spec:
                    properties:
                      image:
                        type: string
                    required:
                    - image
                    type: object
                  strategy:
                    enum:
                    - image
                    type: string
                required:
                - strategy
                - spec
                type: object
              - properties:
                  spec:
                    properties:
                      clusterPermissions:
                        description: Cluster permissions needed by the deployement
                          to run correctly
                        items:
                          properties:
                            rules:
                              items:
                                description: a rule required by the service account
                                properties:
                                  apiGroups:
                                    description: apiGroups the rule applies to
                                    items:
                                      type: string
                                    type: array
                                  nonResourceURLs:
                                    items:
                                      type: string
                                    type: array
                                  resourceNames:
                                    items:
                                      type: string
                                    type: array
                                  resources:
                                    items:
                                      type: string
                                    type: array
                                  verbs:
                                    items:
                                      enum:
                                      - '*'
                                      - assign
                                      - get
                                      - list
                                      - watch
                                      - create
                                      - update
                                      - patch
                                      - put
                                      - post
                                      - delete
                                      - deletecollection
                                      - initialize
                                      - use
                                      type: string
                                    type: array
                                required:
                                - verbs
                                type: object
                              type: array
                            serviceAccountName:
                              description: The service account name to create for
                                the deployment
                              type: string
                          required:
                          - serviceAccountName
                          - rules
                          type: object
                        type: array
                      deployments:
                        description: List of deployments to create
                        items:
                          description: A name and deployment to create in the cluster
                          properties:
                            name:
                              description: the consistent name of the deployment
                              type: string
                            spec:
                              description: The deployment spec to create in the cluster
                              type: object
                          required:
                          - name
                          - spec
                          type: object
                        type: array
                      installModes:
                        description: List of supported install modes for the operator
                        items:
                          description: A tuple representing a mode of installation
                            and whether the operator supports it
                          properties:
                            supported:
                              description: Represents if the install mode type is
                                supported
                              type: boolean
                            type:
                              description: A type of install mode
                              enum:
                              - OwnNamespace
                              - SingleNamespace
                              - MultiNamespace
                              - AllNamespaces
                              type: string
                          required:
                          - type
                          - supported
                          type: object
                        type: array
                      permissions:
                        description: Permissions needed by the deployement to run
                          correctly
                        items:
                          properties:
                            rules:
                              items:
                                description: a rule required by the service account
                                properties:
                                  apiGroups:
                                    description: apiGroups the rule applies to
                                    items:
                                      type: string
                                    type: array
                                  resourceNames:
                                    items:
                                      type: string
                                    type: array
                                  resources:
                                    items:
                                      type: string
                                    type: array
                                  verbs:
                                    items:
                                      enum:
                                      - '*'
                                      - assign
                                      - get
                                      - list
                                      - watch
                                      - create
                                      - update
                                      - patch
                                      - delete
                                      - deletecollection
                                      - initialize
                                      - use
                                      type: string
                                    type: array
                                type: object
                              type: array
                            serviceAccountName:
                              description: The service account name to create for
                                the deployment
                              type: string
                          required:
                          - serviceAccountName
                          - rules
                          type: object
                        type: array
                    required:
                    - deployments
                    type: object
                  strategy:
                    enum:
                    - deployment
                    type: string
                required:
                - strategy
                - spec
                type: object
              type: object
            keywords:
              description: List of keywords which will be used to discover and categorize
                app types
              items:
                type: string
              type: array
            labels:
              description: Labels that will be applied to associated resources created
                by the operator.
              type: object
            links:
              description: Interesting links to find more information about the project,
                such as marketing page, documentation, or github page
              items:
                description: A single link to describe one aspect of the project
                properties:
                  name:
                    description: Name of the link type, e.g. homepage or github url
                    type: string
                  url:
                    description: URL to which the link should point
                    format: uri
                    type: string
                required:
                - name
                - url
                type: object
              type: array
            maintainers:
              description: Those responsible for the creation of this specific app
                type
              items:
                description: Information for a single maintainer
                optionalProperties:
                  description: 'Any additional key-value metadata you wish to expose
                    about the maintainer, e.g. github: <username>'
                  type: string
                properties:
                  email:
                    description: Maintainer's email address
                    format: email
                    type: string
                  name:
                    description: Maintainer's name
                    type: string
                required:
                - name
                - email
                type: object
              type: array
            maturity:
              description: What level of maturity the software has achieved at this
                version
              enum:
              - planning
              - pre-alpha
              - alpha
              - beta
              - stable
              - mature
              - inactive
              - deprecated
              type: string
            minKubeVersion:
              description: Minimum kubernetes version requirement on the server to
                deploy operator
              pattern: ^\bv?(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$
              type: string
            nativeAPIs:
              description: What resources are required by the Operator, but must be
                provided by the underlying cluster and not as an extension.
              items:
                properties:
                  group:
                    description: Group of the API resource
                    type: string
                  kind:
                    description: Kind of the API resource
                    type: string
                  version:
                    description: Version of the API resource
                    type: string
                required:
                - group
                - version
                - kind
                type: object
              type: array
            replaces:
              description: Name of the ClusterServiceVersion custom resource that
                this version replaces
              type: string
            selector:
              description: Label selector to find resources associated with or managed
                by the operator
              properties:
                matchExpressions:
                  description: A set of expressions to match against the resource.
                  items:
                    allOf:
                    - properties:
                        key:
                          description: the key to match
                          type: string
                        operator:
                          description: the operator for the expression
                          enum:
                          - In
                          - NotIn
                          - Exists
                          - DoesNotExist
                          type: string
                        values:
                          description: set of values for the expression
                          type: array
                      required:
                      - key
                      - operator
                      - values
                      type: object
                  type: array
                matchLabels:
                  description: Label key:value pairs to match directly
                  type: object
              type: object
            version:
              description: Version string, recommended that users use semantic versioning
              pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$
              type: string
          required:
          - displayName
          - install
          type: object
        status:
          description: Status for a ClusterServiceVersion
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    description: Represents a plan to install and resolve dependencies for Cluster
      Services
    displayName: Install Plan
  name: installplans.operators.coreos.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.clusterServiceVersionNames[0]
    description: The first CSV in the list of clusterServiceVersionNames
    name: CSV
    type: string
  - JSONPath: .spec.approval
    description: The approval mode
    name: Approval
    type: string
  - JSONPath: .spec.approved
    name: Approved
    type: boolean
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: InstallPlan
    listKind: InstallPlanList
    plural: installplans
    shortNames:
    - ip
    singular: installplan
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Represents a plan to install and resolve dependencies for Cluster
        Services.
      properties:
        spec:
          anyOf:
          - properties:
              approval:
                enum:
                - Manual
              approved:
                type: boolean
            required:
            - approved
          - properties:
              approval:
                enum:
                - Automatic
          description: Spec for an InstallPlan
          properties:
            clusterServiceVersionNames:
              description: A list of the names of the Cluster Services
              items:
                type: string
              type: array
            source:
              description: Name of the preferred CatalogSource
              type: string
            sourceNamespace:
              description: Namespace that contains the preffered CatalogSource
              type: string
          required:
          - clusterServiceVersionNames
          - approval
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: operatorgroups.operators.coreos.com
spec:
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: OperatorGroup
    listKind: OperatorGroupList
    plural: operatorgroups
    shortNames:
    - og
    singular: operatorgroup
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A grouping of namespaces for usage with an operator.
      properties:
        spec:
          description: Spec for an OperatorGroup.
          properties:
            selector:
              anyOf:
              - properties:
                  matchLabels:
                    description: Label key:value pairs to match directly
                    type: object
                required:
                - matchLabels
              - properties:
                  matchExpressions:
                    description: A set of expressions to match against the resource.
                    items:
                      allOf:
                      - properties:
                          key:
                            description: the key to match
                            type: string
                          operator:
                            description: the operator for the expression
                            enum:
                            - In
                            - NotIn
                            - Exists
                            - DoesNotExist
                            type: string
                          values:
                            description: set of values for the expression
                            type: array
                        required:
                        - key
                        - operator
                        - values
                        type: object
                    type: array
                required:
                - matchExpressions
              description: Optional label selector to find resources associated with
                or managed by the operator
              type: object
            serviceAccountName:
              type: string
            staticProvidedAPIs:
              description: If true, OLM will not modify the OperatorGroup's providedAPIs
                annotation.
              type: boolean
            targetNamespaces:
              description: Optional list of target namespaces. If set, OLM will ignore
                selector.
              items:
                pattern: ^\S+$
                type: string
              type: array
          type: object
        status:
          description: The status of the OperatorGroup.
          properties:
            lastUpdated:
              format: date-time
              type: string
            namespaces:
              items:
                type: string
              type: array
          required:
          - lastUpdated
          type: object
      required:
      - metadata
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
  - name: v1alpha2
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    description: Subscribes service catalog to a source and channel to recieve updates
      for packages.
    displayName: Subscription
  name: subscriptions.operators.coreos.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.name
    description: The package subscribed to
    name: Package
    type: string
  - JSONPath: .spec.source
    description: The catalog source for the specified package
    name: Source
    type: string
  - JSONPath: .spec.channel
    description: The channel of updates to subscribe to
    name: Channel
    type: string
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: Subscription
    listKind: SubscriptionList
    plural: subscriptions
    shortNames:
    - sub
    - subs
    singular: subscription
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Subscribes service catalog to a source and channel to recieve updates
        for packages.
      properties:
        spec:
          description: Spec for a Subscription
          properties:
            channel:
              description: Name of the channel to track
              type: string
            config:
              description: Operator Pod configuration, it is applied to the operator
                during install. It has higher precedence than the same configuration
                specified in a ClusterServiveVersion.
              properties:
                env:
                  description: List of environment variables to set in the container
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container
                    properties:
                      name:
                        description: EnvVar represents an environment variable present
                          in a Container
                        type: string
                      value:
                        description: Value of the environment variable specified
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap
                            properties:
                              key:
                                description: The key to select
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to v1
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to 1
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                envFrom:
                  description: List of sources to populate environment variables in
                    the container. The keys defined within a source must be a C_IDENTIFIER.
                    All invalid keys will be reported as an event when the container
                    is starting. When a key exists in multiple sources, the value
                    associated with the last source will take precedence. Values defined
                    by an Env with a duplicate key will take precedence. Cannot be
                    updated
                  items:
                    description: EnvFromSource represents the source of a set of ConfigMaps
                    properties:
                      configMapRef:
                        description: |-
                          ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

                          The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap must be defined
                            type: boolean
                        type: object
                      prefix:
                        description: An optional identifier to prepend to each key
                          in the ConfigMap. Must be a C_IDENTIFIER
                        type: string
                      secretRef:
                        description: |-
                          SecretEnvSource selects a Secret to populate the environment variables with.

                          The contents of the target Secret's Data field will represent the key-value pairs as environment variables
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          optional:
                            description: Specify whether the Secret must be defined
                            type: boolean
                        type: object
                    type: object
                  type: array
              type: object
            installPlanApproval:
              description: Approval mode for emitted InstallPlans
              enum:
              - Manual
              - Automatic
              type: string
            name:
              description: Name of the package that defines the application
              type: string
            source:
              description: Name of a CatalogSource that defines where and how to find
                the channel
              type: string
            sourceNamespace:
              description: The Kubernetes namespace where the CatalogSource used is
                located
              type: string
            startingCSV:
              description: Name of the AppType that this subscription tracks
              type: string
          required:
          - source
          - name
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: olm-operator-serviceaccount
  namespace: openshift-operator-lifecycle-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: operator-lifecycle-manager-metrics
  namespace: openshift-operator-lifecycle-manager
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: aggregate-olm-edit
rules:
- apiGroups:
  - operators.coreos.com
  resources:
  - subscriptions
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  - catalogsources
  - installplans
  - subscriptions
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: aggregate-olm-view
rules:
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  - catalogsources
  - installplans
  - subscriptions
  - operatorgroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  - packagemanifests/icon
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:controller:operator-lifecycle-manager
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: operator-lifecycle-manager-metrics
  namespace: openshift-operator-lifecycle-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-lifecycle-manager-metrics
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: openshift-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: olm-operator-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:operator-lifecycle-manager
subjects:
- kind: ServiceAccount
  name: olm-operator-serviceaccount
  namespace: openshift-operator-lifecycle-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: catalog-operator
  name: catalog-operator
  namespace: openshift-operator-lifecycle-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalog-operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: catalog-operator
    spec:
      containers:
      - args:
        - --namespace
        - openshift-marketplace
        - --writeStatusName
        - operator-lifecycle-manager-catalog
        - --tls-cert
        - /var/run/secrets/serving-cert/tls.crt
        - --tls-key
        - /var/run/secrets/serving-cert/tls.key
        command:
        - /bin/catalog
        env:
        - name: RELEASE_VERSION
          value: 0.0.1-snapshot
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/operator-framework/olm@sha256:91ac5bf350192e063a3c1be994827f67e254997939eda3d471253777cc840c45
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        name: catalog-operator
        ports:
        - containerPort: 8080
          name: health
        - containerPort: 8081
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
        resources:
          requests:
            cpu: 10m
            memory: 80Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/secrets/serving-cert
          name: serving-cert
      nodeSelector:
        beta.kubernetes.io/os: linux
        node-role.kubernetes.io/master: ""
      priorityClassName: system-cluster-critical
      serviceAccountName: olm-operator-serviceaccount
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 120
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 120
      volumes:
      - name: serving-cert
        secret:
          secretName: catalog-operator-serving-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: olm-operator
  name: olm-operator
  namespace: openshift-operator-lifecycle-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: olm-operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: olm-operator
    spec:
      containers:
      - args:
        - --namespace
        - $(POD_NAMESPACE)
        - --writeStatusName
        - operator-lifecycle-manager
        - --writePackageServerStatusName
        - operator-lifecycle-manager-packageserver
        - --tls-cert
        - /var/run/secrets/serving-cert/tls.crt
        - --tls-key
        - /var/run/secrets/serving-cert/tls.key
        command:
        - /bin/olm
        env:
        - name: RELEASE_VERSION
          value: 0.0.1-snapshot
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPERATOR_NAME
          value: olm-operator
        image: quay.io/operator-framework/olm@sha256:91ac5bf350192e063a3c1be994827f67e254997939eda3d471253777cc840c45
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        name: olm-operator
        ports:
        - containerPort: 8080
          name: health
        - containerPort: 8081
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
        resources:
          requests:
            cpu: 10m
            memory: 80Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/secrets/serving-cert
          name: serving-cert
      nodeSelector:
        beta.kubernetes.io/os: linux
        node-role.kubernetes.io/master: ""
      priorityClassName: system-cluster-critical
      serviceAccountName: olm-operator-serviceaccount
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 120
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 120
      volumes:
      - name: serving-cert
        secret:
          secretName: catalog-operator-serving-cert
---
apiVersion: config.openshift.io/v1
kind: ClusterOperator
metadata:
  name: operator-lifecycle-manager-catalog
  namespace: openshift-operator-lifecycle-manager
status:
  versions:
  - name: operator
    version: 0.0.1-snapshot
---
apiVersion: config.openshift.io/v1
kind: ClusterOperator
metadata:
  name: operator-lifecycle-manager-packageserver
  namespace: openshift-operator-lifecycle-manager
status:
  versions:
  - name: operator
    version: 0.0.1-snapshot
---
apiVersion: config.openshift.io/v1
kind: ClusterOperator
metadata:
  name: operator-lifecycle-manager
  namespace: openshift-operator-lifecycle-manager
status:
  versions:
  - name: operator
    version: 0.0.1-snapshot
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: catalog-operator
  name: catalog-operator
  namespace: openshift-operator-lifecycle-manager
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 30s
    metricRelabelings:
    - action: drop
      regex: etcd_(debugging|disk|request|server).*
      sourceLabels:
      - __name__
    port: https-metrics
    scheme: https
    tlsConfig:
      caFile: /etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt
      serverName: catalog-operator-metrics.openshift-operator-lifecycle-manager.svc
  jobLabel: component
  namespaceSelector:
    matchNames:
    - openshift-operator-lifecycle-manager
  selector:
    matchLabels:
      app: catalog-operator
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: olm-operator
  name: olm-operator
  namespace: openshift-operator-lifecycle-manager
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 30s
    metricRelabelings:
    - action: drop
      regex: etcd_(debugging|disk|request|server).*
      sourceLabels:
      - __name__
    port: https-metrics
    scheme: https
    tlsConfig:
      caFile: /etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt
      serverName: olm-operator-metrics.openshift-operator-lifecycle-manager.svc
  jobLabel: component
  namespaceSelector:
    matchNames:
    - openshift-operator-lifecycle-manager
  selector:
    matchLabels:
      app: olm-operator
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: olm-operators
  namespace: openshift-operator-lifecycle-manager
spec:
  targetNamespaces:
  - openshift-operator-lifecycle-manager
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: global-operators
  namespace: openshift-operators
---
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  labels:
    olm.clusteroperator.name: operator-lifecycle-manager-packagerserver
    olm.version: 0.12.0
  name: packageserver
  namespace: openshift-operator-lifecycle-manager
spec:
  apiservicedefinitions:
    owned:
    - containerPort: 5443
      deploymentName: packageserver
      description: A PackageManifest is a resource generated from existing CatalogSources
        and their ConfigMaps
      displayName: PackageManifest
      group: packages.operators.coreos.com
      kind: PackageManifest
      name: packagemanifests
      version: v1
  description: Represents an Operator package that is available from a given CatalogSource
    which will resolve to a ClusterServiceVersion.
  displayName: Package Server
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
          - get
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - operators.coreos.com
          resources:
          - catalogsources
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - packages.operators.coreos.com
          resources:
          - packagemanifests
          verbs:
          - get
          - list
        serviceAccountName: olm-operator-serviceaccount
      deployments:
        spec:
          template:
            spec:
              containers:
              - args:
                - -v=4
                - --secure-port
                - "5443"
                - --global-namespace
                - openshift-marketplace
                command:
                - /bin/package-server
                env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: quay.io/operator-framework/olm@sha256:91ac5bf350192e063a3c1be994827f67e254997939eda3d471253777cc840c45
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 5443
                    scheme: HTTPS
                name: packageserver
                ports:
                - containerPort: 5443
                readinessProbe:
                  httpGet:
                    path: /healthz
                    port: 5443
                    scheme: HTTPS
                terminationMessagePolicy: FallbackToLogsOnError
              nodeSelector:
                beta.kubernetes.io/os: linux
                node-role.kubernetes.io/master: ""
              priorityClassName: system-cluster-critical
              tolerations:
              - effect: NoSchedule
                key: node-role.kubernetes.io/master
                operator: Exists
              - effect: NoExecute
                key: node.kubernetes.io/unreachable
                operator: Exists
                tolerationSeconds: 120
              - effect: NoExecute
                key: node.kubernetes.io/not-ready
                operator: Exists
                tolerationSeconds: 120
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - packagemanifests
  - olm
  - packages
  links:
  - name: Package Server
    url: https://github.com/operator-framework/operator-lifecycle-manager/tree/master/pkg/package-server
  maintainers:
  - email: openshift-operators@redhat.com
    name: Red Hat
  maturity: alpha
  minKubeVersion: 1.11.0
  provider:
    name: Red Hat
  version: 0.12.0
