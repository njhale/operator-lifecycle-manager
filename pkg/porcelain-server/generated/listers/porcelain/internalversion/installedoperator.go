/*
Copyright 2019 Red Hat, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package internalversion

import (
	porcelain "github.com/operator-framework/operator-lifecycle-manager/pkg/porcelain-server/apis/porcelain"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InstalledOperatorLister helps list InstalledOperators.
type InstalledOperatorLister interface {
	// List lists all InstalledOperators in the indexer.
	List(selector labels.Selector) (ret []*porcelain.InstalledOperator, err error)
	// InstalledOperators returns an object that can list and get InstalledOperators.
	InstalledOperators(namespace string) InstalledOperatorNamespaceLister
	InstalledOperatorListerExpansion
}

// installedOperatorLister implements the InstalledOperatorLister interface.
type installedOperatorLister struct {
	indexer cache.Indexer
}

// NewInstalledOperatorLister returns a new InstalledOperatorLister.
func NewInstalledOperatorLister(indexer cache.Indexer) InstalledOperatorLister {
	return &installedOperatorLister{indexer: indexer}
}

// List lists all InstalledOperators in the indexer.
func (s *installedOperatorLister) List(selector labels.Selector) (ret []*porcelain.InstalledOperator, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*porcelain.InstalledOperator))
	})
	return ret, err
}

// InstalledOperators returns an object that can list and get InstalledOperators.
func (s *installedOperatorLister) InstalledOperators(namespace string) InstalledOperatorNamespaceLister {
	return installedOperatorNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InstalledOperatorNamespaceLister helps list and get InstalledOperators.
type InstalledOperatorNamespaceLister interface {
	// List lists all InstalledOperators in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*porcelain.InstalledOperator, err error)
	// Get retrieves the InstalledOperator from the indexer for a given namespace and name.
	Get(name string) (*porcelain.InstalledOperator, error)
	InstalledOperatorNamespaceListerExpansion
}

// installedOperatorNamespaceLister implements the InstalledOperatorNamespaceLister
// interface.
type installedOperatorNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InstalledOperators in the indexer for a given namespace.
func (s installedOperatorNamespaceLister) List(selector labels.Selector) (ret []*porcelain.InstalledOperator, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*porcelain.InstalledOperator))
	})
	return ret, err
}

// Get retrieves the InstalledOperator from the indexer for a given namespace and name.
func (s installedOperatorNamespaceLister) Get(name string) (*porcelain.InstalledOperator, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(porcelain.Resource("installedoperator"), name)
	}
	return obj.(*porcelain.InstalledOperator), nil
}
